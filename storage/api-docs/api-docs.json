{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel 11 Store API",
        "description": "By L5 Swagger OpenApi description",
        "contact": {
            "email": "samit@email.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0",
        "x-logo": {
            "url": "https://via.placeholder.com/190x90.png?text=L5-Swagger"
        }
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Laravel 11 Store API"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Registrate",
                "operationId": "Register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fullname": {
                                        "description": "Enter your fullname",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "Enter your username",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Enter your Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Enter your password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Enter your password confirmation",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "tel": {
                                        "description": "Enter your tel",
                                        "type": "string"
                                    },
                                    "role": {
                                        "description": "Enter your role",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Register Successfully"
                    },
                    "409": {
                        "description": "User with this email already exists"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "field_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The field_name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "operationId": "Login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Enter your email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Enter your password",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Login Successfully"
                    },
                    "401": {
                        "description": "Login failed"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "field_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The field_name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/refreshtoken": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Token",
                "operationId": "RefreshToken",
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Token refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "token_value"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "operationId": "Logout",
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while logging out.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while logging out."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "operationId": "1bfaa78d1c2c3848ab8165c5dadcad3e",
                "responses": {
                    "200": {
                        "description": "List all products"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "e8185e307706e2cd84bbcf5171e2f09d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of product",
                                        "type": "string",
                                        "example": "Product 1"
                                    },
                                    "slug": {
                                        "description": "Slug of product",
                                        "type": "string",
                                        "example": "product-1"
                                    },
                                    "price": {
                                        "description": "Price of product",
                                        "type": "number",
                                        "example": "100.00"
                                    },
                                    "description": {
                                        "description": "Description of product",
                                        "type": "string",
                                        "example": "Description of product"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product by id",
                "operationId": "7ab21ddb713501f3d4c2914892c02a21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product found"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product by id",
                "operationId": "6a7e11900844cd85cff66e662b82bd4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of product",
                                        "type": "string",
                                        "example": "Product 1"
                                    },
                                    "slug": {
                                        "description": "Slug of product",
                                        "type": "string",
                                        "example": "product-1"
                                    },
                                    "price": {
                                        "description": "Price of product",
                                        "type": "number",
                                        "example": "100.00"
                                    },
                                    "description": {
                                        "description": "Description of product",
                                        "type": "string",
                                        "example": "Description of product"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete product by id",
                "operationId": "e80a6ca46716acee6b47ea1ac91663c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "required": [
                    "fullname",
                    "username",
                    "email",
                    "password",
                    "tel",
                    "role"
                ],
                "properties": {
                    "id": {
                        "description": "The user ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "fullname": {
                        "description": "The user's fullname",
                        "type": "string"
                    },
                    "username": {
                        "description": "The user's username",
                        "type": "string"
                    },
                    "email": {
                        "description": "The user's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "The user's password",
                        "type": "string",
                        "format": "password"
                    },
                    "tel": {
                        "description": "The user's tel",
                        "type": "string"
                    },
                    "avatar": {
                        "description": "The user's avatar",
                        "type": "string"
                    },
                    "role": {
                        "description": "The user's role",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "required": [
                    "name",
                    "slug",
                    "price"
                ],
                "properties": {
                    "name": {
                        "description": "Name of product",
                        "type": "string",
                        "example": "Product 1"
                    },
                    "slug": {
                        "description": "Slug of product",
                        "type": "string",
                        "example": "product-1"
                    },
                    "price": {
                        "description": "Price of product",
                        "type": "number",
                        "example": "100.00"
                    },
                    "description": {
                        "description": "Description of product",
                        "type": "string",
                        "example": "Description of product"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Sanctum security laravel",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}